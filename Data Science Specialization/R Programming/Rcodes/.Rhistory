ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, ncol = 2)
library(tidyverse)
#Geometric Objects
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
grom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data =diamonds) +
geom_bar(mapping = aes(x= cut))
?geom_bar
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = 1)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop..)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = x)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = 1)
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
?stat_bin
#exercise
?stat_summary
?geom_bar
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identidy")
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, color = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = city, y = hwy)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter()
?geom_jitter
ggplot(data = mpg, mapping = aes(x = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(y = hwy, fill = drv)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
nz <- map_data("nz")
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1)
bar + coord_polar()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
bar + coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity)) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = 1)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop..)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = 2)
)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, y = ..prop.., group = 1)
)
x <- "xxx
uu
"
x
library(nycflights13)
library(tidyverse)
flights
jan1 <- filter(flights, month == 1, day == 1)
(jan1 <- filter(flights, month == 1, day == 1))
filter(flights, arr_delay >= 120)
filter(flights, dest %in% c("IAH", "HOU"))
?between
NA ^ 0
FALSE|NA
TRUE|NA
FALSE&NA
min(flights$dep_time)
range(flights$dep_time)
unique(flights$dep_time)
filter(flights, between(sched_dep_time, 0, 600))
arrange(flights, year, month, day)
arrange(flights, is.na(dep_time))
arrange(flights, is.na(sched_dep_time))
sapply(flights, is.na)
sapply(flights, sum(is.na))
sapply(flights, is.na)
library(nycflights13)
sum(sapply(flights, is.na))
summary(flights)
arrange(flights, is.na(dep_time))
arrange(flights, is.na(dep_time), dep_time)
arrange(flights, desc(is.na(dep_time)), dep_time)
arrange(flights, desc(distance))
select(flights, year, month, day)
select(flights, -(year:day))
?select
rename(flights, tail_num = tailname)
select(flights, carrier, flight, everything())
select(flights, contains("TIME"))
view()
View()
View(flights)
mutate(flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
tansmutate(flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
tansmute(flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
transmute(flights,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
flights
mutate(flights,
dep_time_mins = dep_time %/% 100 * 60 + dep_time %% 100)
mutate(flights,
dep_time_mins = dep_time %/% 100 * 60 + dep_time %% 100) %>%
select(dep_time, dep_time_mins)
?min_rank
mutate(flights,
dep_delay_rank = min_rank(desc(dep_delay))) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
mutate(flights,
dep_delay_rank = min_rank(-dep_delay)) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
mutate(flights,
dep_delay_rank = min_rank(-dep_delay, arr_time)) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
mutate(flights,
dep_delay_rank = min_rank(dep_delay, arr_time)) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
mutate(flights,
dep_delay_rank = row_number()) %>%
arrange(dep_delay_rank) %>%
filter(dep_delay_rank <= 10)
y <- c(1,2,2,3,3,NA,4)
min_rank(y)
row_number(y)
dense_rank(y)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
group_by(flights, year, month, day) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE))
summarize(flights,
count = n(dep_delay),
count_nm = sum(!is.na(dep_delay)))
summarize(flights,
count = n(),
count_nm = sum(!is.na(dep_delay)))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(dep_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay))
delay
delays
ggplot(data = delays, mapping = aes(x = delay)) +
geom_point()
ggplot(data = delays, mapping = aes(x = delay)) +
geom_bar()
delays
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay))
delays
ggplot(data = delays, mapping = aes(x = delay)) +
geom_bar()
ggplot(data = delays, mapping = aes(x = delay)) +
geom_line()
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly()
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(delay = mean(arr_delay),
n = n())
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point()
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 2/10)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
avg_delay1 = mean(arr_delay),
avg_delay2 = mean(arr_delay[arr_delay > 0])
)
not_cancelled %>%
group_by(dest) %>%
summarise(distance_sd = sd(distance)) %>%
arrange(-distance_sd)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first = min(dep_time),
q0.25 = quantile(dep_time, 0.25),
last = max(dep_time)
)
?first
x <- 1:10
last(x)
first(x)
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.2)
diamonds %>%
count(cut_width(carat, 0.5))
ggplot(data = diamonds, mapping = aes(x = carat, color = cut)) +
geom_freqpoly(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0,50))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = price)) +
coord_cartesian(xlim = c(100, 5000), ylim = c(0,3000))
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = price)) +
xlim(100, 5000) +
yim(0, 3000)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = price)) +
xlim(100, 5000) +
ylim(0, 3000)
diamonds <- diamonds %>%
mutate(y = ifelse(y < 3 | y > 20, NA, y))
library(tidyverse)
diamonds2 <- diamonds %>%
mutate(y = ifelse(y < 3 | y > 20, NA, y))
ggplot(data = diamonds2)
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = diamonds2, mapping = aes(x = x, y = y)) +
geom_point(na.rm = T)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min/60
) %>%
ggplot(mapping = aes(x = sched_dep_time)) +
geom_freqpoly(mapping = aes(color = cancelled), binwidth = 1/4)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data = mpg) +
geom_boxplot(
mapping = aes(
x = reorder(class, hwy, FUN = median),
y = hwy
)
) +
coord_flip()
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min/60
) %>%
ggplot(mapping = aes(x = sched_dep_time)) +
geom_freqpoly(mapping = aes(color = cancelled), binwidth = 1/4)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min/60
) %>%
ggplot(mapping = aes(x = cancelled, y = sched_dep_time)) +
geom_boxplot()
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = cut_width(carat, 0.1), y = price))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price, group = cut_width(carat, 0.1)))
?group
h <- ggplot(nlme::Oxboys, aes(age, height))
h + geom_line()
h + geom_line(aes(group = Subject))
h <- h + geom_line(aes(group = Subject))
# Using the group aesthetic with both geom_line() and geom_smooth()
# groups the data the same way for both layers
h + geom_smooth(aes(group = Subject), method = "lm", se = FALSE)
h + geom_smooth(aes(group = Subject), method = "lm", se = FALSE)
h + geom_smooth(aes(group = 1), size = 2, method = "lm", se = FALSE)
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
diamonds %>%
count(cut, color)
diamonds %>%
count(cut, color) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
diamonds %>%
count(color, cut) %>%
group_by(color) %>%
mutate(prop = n/sum(n)) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = prop))
diamonds %>%
count(color, cut) %>%
group_by(color) %>%
mutate(prop = n/sum(n)) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = prop)) +
scale_fill_viridis(limits = c(0,1))
diamonds %>%
count(color, cut) %>%
group_by(color) %>%
mutate(prop = n/sum(n)) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = prop)) +
scale_fill_viridis_c(limits = c(0,1))
flights %>%
group_by(month, dest) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = factor(month), y = dest, fill = dep_delay)) +
geom_tile()
nycflights13::flights %>%
group_by(month, dest) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = factor(month), y = dest, fill = dep_delay)) +
geom_tile()
nycflights13::flights %>%
group_by(month, dest) %>%
summarise(dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot(mapping = aes(x = factor(month), y = dest, fill = dep_delay)) +
geom_tile() +
labs(x = "month", y = "Destination")
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, alpha = 1/100))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, alpha = 1/100))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), alpha = 1/100)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5)
ggplot(data = diamonds, mapping = aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0,50))
###2
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price, group = cut_width(carat, 0.1)))
ggplot(data = diamonds) +
geom_bin2d(mapping = aes(x = carat, y = price))
install.packages("hexbin")
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price, group = cut_width(carat, 0.1)))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = carat, y = price))
library(hexbin)
ggplot(data = diamonds) +
geom_hex(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_bin2d(mapping = aes(x = carat, y = price))
ggplot(data = flights, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
library(nycflights13)
ggplot(data = flights, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)), varwidth = TRUE)
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)), varwidth = TRUE)
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut_width(carat)))
ggplot(data = diamonds, mapping = aes(x = price)) +
geom_freqpoly(mapping = aes(color = cut_width(carat, 0.3)))
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(color = cut_width(carat, 0.3)))
source('C:/Users/xywang1/Desktop/Self_Learning/R/TidyVerse/R_Data_Chap5.R')
